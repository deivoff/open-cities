{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"type-graphql\"","webpack:///./server/components/user/index.ts","webpack:///./server/components/geo/index.ts","webpack:///./server/components/layer/index.ts","webpack:///external \"path\"","webpack:///external \"@hasezoey/typegoose\"","webpack:///external \"mongodb\"","webpack:///external \"dotenv\"","webpack:///./server/helpers/index.ts","webpack:///./server/middleware/auth/index.ts","webpack:///./server/components/user/user.entity.ts","webpack:///external \"jsonwebtoken\"","webpack:///./server/components/city/index.ts","webpack:///external \"graphql\"","webpack:///./server/components/auth/index.ts","webpack:///./server/index.ts","webpack:///external \"http\"","webpack:///./server/app.ts","webpack:///external \"reflect-metadata\"","webpack:///external \"koa\"","webpack:///external \"koa-router\"","webpack:///external \"koa-logger\"","webpack:///external \"apollo-server-koa\"","webpack:///external \"mongoose\"","webpack:///./server/components/user/user.resolvers.ts","webpack:///./server/components/user/user.enums.ts","webpack:///./server/components/city/city.entity.ts","webpack:///./server/components/geo/geo.enums.ts","webpack:///./server/components/geo/geo.inputs.ts","webpack:///./server/helpers/scalars.ts","webpack:///external \"graphql/language\"","webpack:///./server/helpers/oauth.ts","webpack:///./server/helpers/array.ts","webpack:///external \"lodash/isString\"","webpack:///./server/components/layer/layer.entity.ts","webpack:///./server/components/layer/layer.inputs.ts","webpack:///./server/components/layer/layer.resolvers.ts","webpack:///./server/components/geo/geo.scalars.ts","webpack:///./server/components/geo/geo.entity.ts","webpack:///./server/components/geo/geo.resolvers.ts","webpack:///./server/components/city/city.resolvers.ts","webpack:///./server/components/auth/auth.resolvers.ts","webpack:///./server/components/auth/google/index.ts","webpack:///external \"googleapis\"","webpack:///./server/components/auth/auth.types.ts","webpack:///external \"@koa/cors\"","webpack:///external \"koa-bodyparser\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","require","config","path","join","__dirname","isAuth","async","ctx","next","authHeader","header","state","token","split","decodedToken","verify","process","env","SECRET_KEY","decodedUser","checkAuth","Error","UserPhoto","Typegoose","Field","String","required","ObjectType","GoogleProvider","UserSocial","_id","UserName","User","today","Date","expirationDate","setDate","getDate","sign","email","this","photos","access","role","id","exp","getTime","accessToken","refreshToken","profile","photo","user","UserModel","findOne","url","UserType","error","ID","ObjectId","type","enum","items","instanceMethod","staticMethod","getModelForClass","PORT","createApp","then","app","createServer","callback","listen","console","log","catch","err","exit","router","oauthHandler","schema","buildSchema","resolvers","UserResolvers","CityResolvers","GeoResolvers","LayerResolvers","AuthResolvers","emitSchemaFile","validate","use","origin","credentials","set","method","status","server","ApolloServer","context","playground","introspection","routes","allowedMethods","applyMiddleware","connect","DB_URL","useNewUrlParser","dbName","DB_NAME","useUnifiedTopology","find","Query","returns","Resolver","of","registerEnumType","City","GeometryCoords","Array","Int","CityModel","GeometryType","GeoInput","Geometry","GraphQLJSON","Layer","InputType","identity","ensureObject","isArray","TypeError","parseObject","ast","variables","fields","forEach","field","parseLiteral","kind","Kind","STRING","BOOLEAN","INT","FLOAT","parseFloat","OBJECT","LIST","values","map","NULL","VARIABLE","undefined","GraphQLScalarType","description","serialize","parseValue","GraphQLJSONObject","body","request","query","code","isArrayExist","elem","length","deepArrayReverse","array","deep","result","reverse","arr","deepStringToNumber","Number","ref","itemsRef","Geo","LayerModel","schemaOptions","timestamps","LayerInput","city","layerInput","layer","owner","save","findById","GeoModel","Arg","Ctx","Mutation","FieldResolver","Root","GeoSum","Float","properties","geometry","geo","author","googleOAuth","GoogleOAuth","urlGoogle","serializeAccountFromCode","upsertGoogleUser","generateJWT","AuthRedirect","AuthResponse","googleConfig","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","redirectUrl","GOOGLE_REDIRECT_URL","defaultScope","auth","google","OAuth2","generateAuthUrl","access_type","prompt","scope","plus","version","getConnectionUrl","tokens","getToken","setCredentials","getGooglePlusApi","me","people","userId","userGoogleId","data","userName","familyName","givenName","userPhoto","image","userGoogleEmail","emails","access_token","refresh_token"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"tslib\");","module.exports = require(\"type-graphql\");","export * from './user.entity';\r\nexport * from './user.resolvers';\r\nexport * from './user.enums';","export * from './geo.enums';\r\nexport * from './geo.types';\r\nexport * from './geo.inputs';\r\nexport * from './geo.scalars';\r\nexport * from './geo.entity';\r\nexport * from './geo.resolvers';","export * from './layer.entity';\r\nexport * from './layer.inputs';\r\nexport * from './layer.resolvers';","module.exports = require(\"path\");","module.exports = require(\"@hasezoey/typegoose\");","module.exports = require(\"mongodb\");","module.exports = require(\"dotenv\");","export * from './scalars';\r\nexport * from './oauth';\r\nexport * from './array';","import jwt from 'jsonwebtoken';\r\nimport path from'path';\r\nimport { Context } from './../../types';\r\nimport { DecodedToken } from './../../components/auth';\r\n\r\nrequire('dotenv').config({path: path.join(__dirname + './../../../.env')});\r\n\r\nexport const isAuth = async (ctx: Context, next: () => Promise<any>) => {\r\n  const authHeader = ctx.header['authorization'];\r\n  if (!authHeader) {\r\n    ctx.state.isAuth = false;\r\n    return (await next());\r\n  }\r\n\r\n  const token = authHeader.split(' ')[1];\r\n  if (!token || token === '') {\r\n    ctx.state.isAuth = false;\r\n    return (await next());\r\n  }\r\n  let decodedToken: string | object;\r\n  try {\r\n    decodedToken = jwt.verify(token, process.env.SECRET_KEY!);\r\n  } catch {\r\n    ctx.state.isAuth = false;\r\n    return (await next());\r\n  }\r\n\r\n  if (!decodedToken) {\r\n    ctx.state.isAuth = false;\r\n    return (await next());\r\n  }\r\n\r\n  ctx.state.isAuth = true;\r\n  ctx.state.decodedUser = decodedToken as DecodedToken;\r\n  return(await next());\r\n};\r\n\r\nexport const checkAuth = (ctx: Context) => {\r\n  if (!ctx.state.isAuth) {\r\n    throw new Error('Unauthenticated');\r\n  }\r\n};\r\n","import {\r\n  prop as Property,\r\n  arrayProp as Properties,\r\n  Typegoose,\r\n  instanceMethod,\r\n  InstanceType,\r\n  ModelType,\r\n  staticMethod\r\n} from '@hasezoey/typegoose';\r\nimport jwt from 'jsonwebtoken';\r\nimport path from 'path';\r\nimport { Model, Document } from 'mongoose';\r\nimport { Field, ObjectType } from 'type-graphql';\r\nimport { ID } from 'type-graphql';\r\nimport { ObjectId } from 'mongodb';\r\nimport { UserType } from '.';\r\nimport { AuthData } from '../auth';\r\n\r\nrequire('dotenv').config({path: path.join(__dirname + './../../../.env')});\r\n@ObjectType()\r\nexport class UserPhoto extends Typegoose {\r\n  @Field(() => String)\r\n  @Property({ required: true })\r\n  url!: string;\r\n}\r\n\r\n@ObjectType()\r\nclass GoogleProvider extends Typegoose {\r\n  @Field()\r\n  @Property({ required: true })\r\n  id!: string;\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  token!: string;\r\n}\r\n\r\n@ObjectType()\r\nclass UserSocial extends Typegoose {\r\n  @Field(() => GoogleProvider)\r\n  @Property({ _id: false })\r\n  googleProvider!: GoogleProvider;\r\n}\r\n\r\n@ObjectType()\r\nexport class UserName extends Typegoose {\r\n  @Field(() => String)\r\n  @Property({ required: true })\r\n  familyName!: string;\r\n\r\n  @Field(() => String)\r\n  @Property({ required: true })\r\n  givenName!: string;\r\n}\r\n\r\n@ObjectType()\r\nexport class User extends Typegoose {\r\n  @Field(() => ID)\r\n  readonly _id!: ObjectId;\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  email!: string;\r\n\r\n  @Field(() => UserName)\r\n  @Property({ _id: false })\r\n  name!: UserName;\r\n\r\n  @Field(type => UserType)\r\n  @Property({ required: true, enum: UserType })\r\n  role!: UserType;\r\n\r\n  @Field(() => [UserPhoto])\r\n  @Properties({ items: UserPhoto, _id: false })\r\n  photos?: UserPhoto[];\r\n\r\n  @Field(() => UserSocial)\r\n  @Property({ _id: false })\r\n  social!: UserSocial;\r\n\r\n  @instanceMethod\r\n  generateJWT() {\r\n    const today = new Date();\r\n    const expirationDate = new Date(today);\r\n    expirationDate.setDate(today.getDate() + 60);\r\n\r\n    return jwt.sign({\r\n        email: this.email,\r\n        name: this.name,\r\n        photos: this.photos ? this.photos : [],\r\n        access: this.role,\r\n        id: this._id,\r\n        exp: expirationDate.getTime() / 1000,\r\n    }, process.env.SECRET_KEY!);\r\n  }\r\n\r\n  @staticMethod\r\n  static async upsertGoogleUser({ accessToken, refreshToken, profile: { email, name, id, photo } }: AuthData) {\r\n    try {\r\n      const user = await UserModel.findOne({ 'social.googleProvider.id': id });\r\n      \r\n      if (!user) {\r\n          const newUser = await UserModel.create({\r\n              name,\r\n              email,\r\n              'social.googleProvider': {\r\n                  id,\r\n                  token: accessToken,\r\n              },\r\n              photos: [{ url: photo }],\r\n              role: UserType.user,\r\n          });\r\n        \r\n          return newUser;\r\n      }\r\n      return user;   \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport type UserDocument = User & Document;\r\nexport interface UserModel extends Model<UserDocument> {\r\n  upsertGoogleUser: (data: AuthData) => Promise<UserDocument>,\r\n  generateJWT: () => string;\r\n};\r\nexport const UserModel: UserModel = new User().getModelForClass(User);\r\n","module.exports = require(\"jsonwebtoken\");","export * from './city.entity';\r\nexport * from './city.resolvers';","module.exports = require(\"graphql\");","export * from './auth.resolvers';\r\nexport * from './auth.types';","import http from 'http';\r\n\r\nimport { createApp } from './app';\r\n\r\nconst PORT = process.env.PORT || 7000;\r\n\r\ncreateApp()\r\n  .then((app: any) => http.createServer(app.callback()).listen(PORT))\r\n  .then(() => console.log(`App listening at port: ${PORT}`))\r\n  .catch((err: Error) => {\r\n    console.error(err);\r\n    process.exit(1);\r\n  });\r\n","module.exports = require(\"http\");","import 'reflect-metadata';\r\nimport path from 'path';\r\nimport Koa from 'koa';\r\nimport KoaRouter from 'koa-router';\r\nimport logger from 'koa-logger';\r\nimport { ApolloServer } from 'apollo-server-koa';\r\nimport mongoose from 'mongoose';\r\nimport { buildSchema } from 'type-graphql';\r\nimport { UserResolvers } from './components/user';\r\nimport { CityResolvers } from './components/city';\r\nimport { GeoResolvers } from './components/geo';\r\nimport { LayerResolvers } from './components/layer';\r\nimport { AuthResolvers } from './components/auth';\r\n// import { MapResolvers } from './components/map';\r\n\r\nimport cors from '@koa/cors';\r\n\r\nimport bodyParser from 'koa-bodyparser';\r\nimport { oauthHandler } from './helpers';\r\nimport { isAuth } from './middleware/auth';\r\nimport { Context } from './types';\r\n\r\nlet config = process.env.NODE_ENV === 'development' && require('dotenv').config({path: path.join(__dirname + './../.env')});\r\n\r\nexport const createApp = async () => {\r\n  const app = new Koa();\r\n  const router = new KoaRouter();\r\n\r\n  // OAUTH\r\n  router.get('/oauth/*', oauthHandler);\r\n\r\n\r\n  const schema = await buildSchema({\r\n    resolvers: [\r\n      UserResolvers, \r\n      CityResolvers, \r\n      GeoResolvers, \r\n      LayerResolvers, \r\n      AuthResolvers,\r\n      // MapResolvers\r\n    ],\r\n    emitSchemaFile: true,\r\n    validate: false\r\n  });\r\n\r\n  //\r\n\r\n  app.use(cors({\r\n    origin: '*',\r\n    credentials: true,\r\n  }))\r\n  app.use(bodyParser());\r\n  app.use(async (ctx, next) => {\r\n    ctx.set('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, X-Requested-With, x-access-token');\r\n    ctx.set('Access-Control-Allow-Methods', 'POST, GET, PUT, DELETE, OPTIONS');\r\n\r\n    if (ctx.method === 'OPTIONS') {\r\n      return ctx.status = 200\r\n    }\r\n\r\n    await next();\r\n  });\r\n  app.use(logger());\r\n  app.use(isAuth)\r\n\r\n  const server = new ApolloServer({\r\n    schema,\r\n    context: (ctx: Context) => ctx,\r\n    playground: process.env.NODE_ENV === 'development',\r\n    introspection: true\r\n  });\r\n  app.use(router.routes());\r\n  app.use(router.allowedMethods());\r\n\r\n  server.applyMiddleware({ app, path: '/graphql' })\r\n\r\n  try {\r\n    await mongoose.connect(`${process.env.DB_URL}`, {\r\n      useNewUrlParser: true,\r\n      dbName: `${process.env.DB_NAME}`,\r\n      useUnifiedTopology: true\r\n    });\r\n    process.env.NODE_ENV === ('development' || 'test') && mongoose.set('debug', true);\r\n    console.log('MongoDB Connected');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return app;\r\n}","module.exports = require(\"reflect-metadata\");","module.exports = require(\"koa\");","module.exports = require(\"koa-router\");","module.exports = require(\"koa-logger\");","module.exports = require(\"apollo-server-koa\");","module.exports = require(\"mongoose\");","import { Resolver, Query } from 'type-graphql';\r\n\r\nimport { User } from '.';\r\nimport { UserModel } from './user.entity';\r\n\r\n@Resolver(of => User)\r\nexport class UserResolvers {\r\n  @Query(returns => [User])\r\n  async getUsers(): Promise<User[]> {\r\n    try {\r\n      console.log(await UserModel.find());\r\n      return (await UserModel.find())\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}","import { registerEnumType } from 'type-graphql';\r\n\r\nexport enum UserType {\r\n  user = 'user',\r\n  researcher = 'researcher',\r\n  admin = 'admin'\r\n}\r\n\r\nregisterEnumType(UserType, {\r\n  name: 'UserType', // this one is mandatory\r\n});\r\n","import { ObjectType, Field, ID, Int } from \"type-graphql\";\r\nimport { Typegoose, prop as Property, arrayProp as Properties } from \"@hasezoey/typegoose\";\r\nimport { Model, Document } from \"mongoose\";\r\nimport { ObjectId } from \"mongodb\";\r\nimport { GeometryCoords } from \"../geo\";\r\n\r\n@ObjectType()\r\nexport class City extends Typegoose {\r\n  @Field(() => ID)\r\n  readonly _id!: ObjectId;\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  name!: string;\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  url!: string;\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  photo!: string;\r\n\r\n  @Field(type => GeometryCoords)\r\n  @Properties({ items: Array })\r\n  center!: Position\r\n\r\n  @Field(type => Int)\r\n  @Property({ required: true })\r\n  zoom!: number;\r\n}\r\n\r\n\r\nexport type CityDocument = City & Document;\r\nexport type CityModel = Model<CityDocument>;\r\nexport const CityModel: CityModel = new City().getModelForClass(City);","import { registerEnumType } from 'type-graphql';\r\n\r\nexport enum GeometryType {\r\n  Point = 'Point',\r\n  MultiPoint = 'MultiPoint',\r\n  LineString = 'LineString',\r\n  MultiLineString = 'MultiLineString',\r\n  Polygon = 'Polygon',\r\n  MultiPolygon = 'MultiPolygon'\r\n}\r\n\r\nregisterEnumType(GeometryType, {\r\n  name: 'GeometryType', // this one is mandatory\r\n});\r\n","import { InputType, Field, ID } from 'type-graphql'\r\nimport { GeoJsonProperties } from 'geojson';\r\nimport { Geo, Geometry } from '.';\r\nimport { GraphQLJSON } from './../../helpers';\r\nimport { Layer } from '../layer';\r\n\r\n@InputType()\r\nexport class GeoInput implements Partial<Geo> {\r\n  @Field(() => Geometry)\r\n  geometry!: Geometry;\r\n\r\n  @Field(() => GraphQLJSON)\r\n  properties!: GeoJsonProperties;\r\n\r\n  @Field(() => ID)\r\n  layer!: Layer;\r\n}","import { GraphQLScalarType } from 'graphql';\r\nimport { Kind } from 'graphql/language';\r\n\r\nfunction identity(value) {\r\n  return value;\r\n}\r\n\r\nfunction ensureObject(value) {\r\n  if (typeof value !== 'object' || value === null || Array.isArray(value)) {\r\n    throw new TypeError(\r\n      `JSONObject cannot represent non-object value: ${value}`,\r\n    );\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\nfunction parseObject(ast, variables) {\r\n  const value = Object.create(null);\r\n  ast.fields.forEach(field => {\r\n    // eslint-disable-next-line no-use-before-define\r\n    value[field.name.value] = parseLiteral(field.value, variables);\r\n  });\r\n\r\n  return value;\r\n}\r\n\r\nexport function parseLiteral(ast, variables) {\r\n  switch (ast.kind) {\r\n    case Kind.STRING:\r\n    case Kind.BOOLEAN:\r\n      return ast.value;\r\n    case Kind.INT:\r\n    case Kind.FLOAT:\r\n      return parseFloat(ast.value);\r\n    case Kind.OBJECT:\r\n      return parseObject(ast, variables);\r\n    case Kind.LIST:\r\n      return ast.values.map(n => parseLiteral(n, variables));\r\n    case Kind.NULL:\r\n      return null;\r\n    case Kind.VARIABLE: {\r\n      const name = ast.name.value;\r\n      return variables ? variables[name] : undefined;\r\n    }\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n// This named export is intended for users of CommonJS. Users of ES modules\r\n// should instead use the default export.\r\nexport const GraphQLJSON = new GraphQLScalarType({\r\n  name: 'JSON',\r\n  description:\r\n    'The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).',\r\n  serialize: identity,\r\n  parseValue: identity,\r\n  parseLiteral,\r\n});\r\n\r\nexport const GraphQLJSONObject = new GraphQLScalarType({\r\n  name: 'JSONObject',\r\n  description:\r\n    'The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).',\r\n  serialize: ensureObject,\r\n  parseValue: ensureObject,\r\n  parseLiteral: parseObject,\r\n});","module.exports = require(\"graphql/language\");","import { Context } from \"koa\";\r\n\r\nexport const oauthHandler = (ctx: Context) => {\r\n  ctx.body = `<script>\r\n  window.opener.postMessage(\r\n    '${ctx.request.query.code}',\r\n    '*'\r\n  );</script>`\r\n}","import isString from 'lodash/isString';\r\n\r\nexport const isArrayExist = (elem: any): boolean => {\r\n  return Array.isArray(elem) && !!elem.length;\r\n};\r\n\r\nexport const deepArrayReverse = (array: any, deep = true) => {\r\n  let result = array.reverse();\r\n  if (deep) {\r\n    result = result.map((arr: any) =>\r\n      isArrayExist(arr) ? deepArrayReverse(arr, true) : arr\r\n    );\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const deepStringToNumber = (array: any, deep = true) => {\r\n  return array.map((elem: any) => {\r\n    if (isString(elem)) {\r\n      return Number.parseFloat(elem);\r\n    } else if (isArrayExist(elem) && deep) {\r\n      return deepStringToNumber(elem, true);\r\n    }\r\n  });\r\n};\r\n","module.exports = require(\"lodash/isString\");","import {\r\n  prop as Property,\r\n  Typegoose,\r\n  Ref,\r\n  arrayProp as Properties\r\n} from '@hasezoey/typegoose';\r\nimport { ObjectType, Field, ID } from \"type-graphql\";\r\nimport { ObjectId } from 'mongodb';\r\nimport { User, UserType } from '../user';\r\nimport { Geo } from '../geo';\r\nimport { Model, Document } from 'mongoose';\r\n\r\n@ObjectType()\r\nexport class Layer extends Typegoose{\r\n  @Field(() => ID)\r\n  readonly _id!: ObjectId;\r\n\r\n  @Field(() => Date)\r\n  readonly createdAt!: Date;\r\n\r\n  @Field(() => Date)\r\n  readonly updatedAt!: Date;\r\n\r\n  @Field()\r\n  @Property({ required: true})\r\n  name!: string;\r\n\r\n  @Field()\r\n  @Property()\r\n  description!: string;\r\n\r\n  @Field(() => User)\r\n  @Property({ required: true, ref: User })\r\n  owner!: Ref<User>;\r\n\r\n  @Field(() => UserType)\r\n  @Property({ required: true, enum: UserType })\r\n  access!: UserType\r\n\r\n  @Field()\r\n  @Property({ required: true })\r\n  city!: string;\r\n\r\n  @Field(() => [User])\r\n  @Properties({ itemsRef: { name: 'User' } })\r\n  subscribers?: Ref<User[]>\r\n\r\n  @Field(() => [Geo])\r\n  geoCollection?: Ref<Geo[]>\r\n}\r\n\r\n\r\nexport type LayerDocument = Layer & Document;\r\nexport type LayerModel = Model<LayerDocument>;\r\nexport const LayerModel: LayerModel = new Layer().getModelForClass(Layer, { schemaOptions: { timestamps: true } });","import { InputType, Field } from \"type-graphql\";\r\nimport { Layer } from \".\";\r\n\r\n@InputType()\r\nexport class LayerInput implements Partial<Layer> {\r\n  @Field()\r\n  name!: string;\r\n\r\n  @Field()\r\n  description!: string;\r\n\r\n  @Field()\r\n  city!: string;\r\n}","import { Resolver, Query, Arg, Mutation, FieldResolver, Root, Ctx } from 'type-graphql';\r\nimport { Layer, LayerModel, LayerInput, LayerDocument } from '.';\r\nimport { User, UserModel, UserType } from '../user';\r\nimport { Geo, GeoModel } from '../geo';\r\nimport { Context } from './../../types';\r\nimport { checkAuth } from './../../middleware/auth';\r\nimport { DecodedToken } from '../auth';\r\n\r\n@Resolver(of => Layer)\r\nexport class LayerResolvers {\r\n  @Query(returns => [Layer])\r\n  async layers(\r\n    @Arg('city') city: string,\r\n    @Ctx() { ctx }: { ctx: Context }\r\n  ): Promise<Layer[]> {\r\n    try {\r\n      const { decodedUser } = ctx.state;\r\n      if (decodedUser) {\r\n        return(await LayerModel.find({ access: decodedUser.access, city }))\r\n      }\r\n      return (await LayerModel.find({ access: UserType.user, city }))!\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @Mutation(returns => Layer)\r\n  async createLayer(\r\n    @Arg('layerInput', type => LayerInput) layerInput: LayerInput,\r\n    @Ctx() { ctx }: { ctx: Context }\r\n  ): Promise<Layer> {\r\n    checkAuth(ctx);\r\n    const { decodedUser } = ctx.state; \r\n    const layer = new LayerModel({\r\n      ...layerInput,\r\n      owner: decodedUser!.id,\r\n      access: decodedUser!.access\r\n    });\r\n    try {\r\n      const savedLayer = await layer.save();\r\n      return savedLayer;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  @FieldResolver(() => User)\r\n  async owner(\r\n    @Root() layer: LayerDocument\r\n  ):Promise<User> { \r\n    try {\r\n      const { owner } = layer;\r\n      return (await UserModel.findById(owner))!;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @FieldResolver(() => [Geo])\r\n  async geoCollection(\r\n    @Root() layer: LayerDocument\r\n  ): Promise<Geo[]> {\r\n    try {\r\n      const { _id } = layer;\r\n      return (await GeoModel.find({ layer: String(_id) }))!;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}","import { GraphQLScalarType, Kind } from 'graphql';\r\n\r\nexport const GeometryCoords = new GraphQLScalarType({\r\n  name: 'GeometryCoords',\r\n  description: 'Coordinates scalar type',\r\n  serialize(value: any) {\r\n    return value // value sent to the client\r\n  },\r\n  parseValue(value: any) {\r\n    return value\r\n  },\r\n  parseLiteral\r\n});\r\n\r\nexport function parseLiteral(ast, variables) {\r\n  switch (ast.kind) {\r\n    case Kind.STRING:\r\n    case Kind.INT:\r\n    case Kind.FLOAT:\r\n      return parseFloat(ast.value);\r\n    case Kind.LIST:\r\n      return ast.values.map(n => parseLiteral(n, variables));\r\n    case Kind.NULL:\r\n      return null;\r\n    case Kind.VARIABLE: {\r\n      const name = ast.name.value;\r\n      return variables ? variables[name] : undefined;\r\n    }\r\n    default:\r\n      return undefined;\r\n  }\r\n}","import {\r\n  prop as Property,\r\n  Typegoose,\r\n  Ref,\r\n  arrayProp as Properties\r\n} from '@hasezoey/typegoose';\r\nimport { ObjectType, ID, Field, InputType, Float, Int } from 'type-graphql';\r\nimport { ObjectId } from 'mongodb';\r\nimport { User, UserType } from '../user';\r\nimport { Model, Document } from 'mongoose';\r\nimport { GeometryType, GeometryCoords, Position } from '.';\r\nimport { GraphQLJSON } from './../../helpers';\r\nimport { GeoJsonProperties } from 'geojson';\r\nimport { Layer } from '../layer';\r\n\r\n@ObjectType()\r\n@InputType('GeometryInput')\r\nexport class Geometry {\r\n  @Field(type => GeometryType)\r\n  @Property({ required: true, enum: GeometryType})\r\n  type!: GeometryType\r\n\r\n  @Field(type => GeometryCoords)\r\n  @Properties({ items: Array })\r\n  coords!: Position | Position[] | Position[][] | Position[][]\r\n}\r\n\r\n@ObjectType()\r\nexport class Geo extends Typegoose{\r\n  @Field(() => ID)\r\n  readonly _id!: ObjectId;\r\n\r\n  @Field(() => Date)\r\n  readonly createdAt!: Date;\r\n\r\n  @Field(() => Date)\r\n  readonly updatedAt!: Date;\r\n\r\n  @Field(() => User)\r\n  @Property({ required: true, ref: User })\r\n  author!: Ref<User>;\r\n\r\n  @Field(() => Layer)\r\n  @Property({ required: true, ref: Layer })\r\n  layer!: Ref<Layer>;\r\n\r\n  @Field(type => UserType)\r\n  @Property({ required: true, enum: UserType })\r\n  access!: UserType;\r\n\r\n  @Field(type => Geometry)\r\n  @Property({ required: true, _id: false })\r\n  geometry!: Geometry;\r\n\r\n  @Field(type => GraphQLJSON)\r\n  @Property()\r\n  properties?: GeoJsonProperties;\r\n}\r\n\r\nexport class GeoSum extends Geo{\r\n  @Field(() => Float)\r\n  sum!: number;\r\n\r\n  @Field(() => Int)\r\n  geoObjects!: number;\r\n}\r\n\r\nexport type GeoDocument = Geo & Document;\r\nexport type GeoModel = Model<GeoDocument>;\r\nexport const GeoModel: GeoModel = new Geo().getModelForClass(Geo, { schemaOptions: { timestamps: true } });","import { Resolver, Mutation, Arg, Ctx, Query, FieldResolver, Root } from \"type-graphql\";\r\nimport { GeoInput, Geo, GeoModel, GeoDocument } from \".\";\r\nimport { User, UserModel, UserType } from '../user';\r\nimport { Layer, LayerModel } from \"../layer\";\r\nimport { Context } from \"./../../types\";\r\nimport { checkAuth } from \"./../../middleware/auth\";\r\n\r\n@Resolver(of => Geo)\r\nexport class GeoResolvers{\r\n  @Query(returns => [Geo])\r\n  async geos(): Promise<Geo[]> {\r\n    try {\r\n      console.log(await GeoModel.find());\r\n      return (await GeoModel.find())\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @Mutation(returns => Geo)\r\n  async createGeo(\r\n    @Arg('geoInput', type => GeoInput) { properties, geometry, layer }: GeoInput,\r\n    @Ctx() { ctx }: { ctx: Context }\r\n  ): Promise<Geo> {\r\n    checkAuth(ctx);\r\n    const { decodedUser } = ctx.state;\r\n    const geo = new GeoModel({\r\n      properties,\r\n      geometry,\r\n      layer,\r\n      author: decodedUser!.id,\r\n      access: decodedUser!.access,\r\n    });\r\n    try {\r\n      const savedGeo = await geo.save();\r\n      return savedGeo;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  @FieldResolver(() => User)\r\n  async author(\r\n    @Root() geo: GeoDocument\r\n  ):Promise<User> { \r\n    try {\r\n      const { author } = geo;\r\n      return (await UserModel.findById(author))!;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @FieldResolver(() => Layer)\r\n  async layer(\r\n    @Root() geo: GeoDocument\r\n    ):Promise<Layer> { \r\n      try {\r\n        const { layer } = geo;\r\n        console.log(layer);\r\n        return (await LayerModel.findById(layer))!;\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n}","import { Resolver, Query } from 'type-graphql';\r\nimport { City, CityModel } from '.';\r\n\r\n@Resolver(of => City)\r\nexport class CityResolvers {\r\n  @Query(returns => [City])\r\n  async cities():Promise<City[]> {\r\n    try {\r\n      return (await CityModel.find())\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}","import { Resolver, Query, Arg, Mutation, Ctx } from 'type-graphql'\r\nimport { AuthResponse, AuthRedirect } from '.';\r\nimport { Context } from 'koa';\r\nimport { GoogleOAuth } from './google';\r\nimport { UserModel, User } from '../user';\r\n\r\n@Resolver(of => AuthResponse)\r\nexport class AuthResolvers {\r\n  googleOAuth = new GoogleOAuth();\r\n\r\n  @Query(returns => AuthRedirect)\r\n  async getGoogleOAuthRedirect(): Promise<AuthRedirect> {\r\n    return {\r\n      url: this.googleOAuth.urlGoogle()\r\n    }\r\n  }\r\n\r\n  @Mutation(returns => AuthResponse)\r\n  async authGoogle(\r\n    @Arg('code') code: string,\r\n    @Ctx() { ctx }: Context\r\n  ): Promise<AuthResponse>{\r\n    try {\r\n      const { accessToken, refreshToken, profile } = await this.googleOAuth.serializeAccountFromCode(code)\r\n      const user = await User.upsertGoogleUser({ accessToken, refreshToken, profile });\r\n      const token = user.generateJWT();\r\n      return ({\r\n        token\r\n      })!;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n}","import path from 'path';\r\nimport { google, plus_v1 } from 'googleapis';\r\n\r\nrequire('dotenv').config({path: path.join(__dirname + './../../../../.env')});\r\n\r\n\r\n\r\nexport class GoogleOAuth {\r\n\r\n  /*******************/\r\n  /** CONFIGURATION **/\r\n  /*******************/\r\n\r\n  googleConfig = {\r\n    clientId: process.env.GOOGLE_CLIENT_ID!, // e.g. asdfghjkljhgfdsghjk.apps.googleusercontent.com\r\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET!, // e.g. _ASDFA%DFASDFASDFASD#FAD-\r\n    redirectUrl: process.env.GOOGLE_REDIRECT_URL\r\n  };\r\n\r\n  defaultScope = [\r\n    'https://www.googleapis.com/auth/plus.me',\r\n    'https://www.googleapis.com/auth/userinfo.email',\r\n    'https://www.googleapis.com/auth/userinfo.profile',\r\n  ];\r\n\r\n\r\n  /*************/\r\n  /** HELPERS **/\r\n  /*************/\r\n\r\n  auth = new google.auth.OAuth2(\r\n      this.googleConfig.clientId,\r\n      this.googleConfig.clientSecret,\r\n      this.googleConfig.redirectUrl\r\n  );\r\n\r\n  getConnectionUrl(): string {\r\n    return this.auth.generateAuthUrl({\r\n      access_type: 'offline',\r\n      prompt: 'consent',\r\n      scope: this.defaultScope\r\n    });\r\n  }\r\n\r\n  getGooglePlusApi(): plus_v1.Plus {\r\n    return google.plus({ version: 'v1', auth: this.auth });\r\n  }\r\n\r\n  urlGoogle(): string {\r\n    const url = this.getConnectionUrl();\r\n    return url;\r\n  }\r\n\r\n  async serializeAccountFromCode(code: string) {\r\n    try {\r\n      const data = await this.auth.getToken(code);\r\n      const tokens = data.tokens;\r\n      this.auth.setCredentials(tokens);\r\n      const plus = this.getGooglePlusApi();\r\n      const me = await plus.people.get({ userId: 'me' });\r\n      const userGoogleId = me.data.id;\r\n      const userName = {\r\n        familyName: me.data.name!.familyName!,\r\n        givenName: me.data.name!.givenName!\r\n      }\r\n      const userPhoto = me.data.image!.url;\r\n      const userGoogleEmail = me.data.emails![0].value;\r\n      return {\r\n        accessToken: tokens.access_token!,\r\n        refreshToken: tokens.refresh_token!,\r\n        profile: {\r\n          id: userGoogleId!,\r\n          email: userGoogleEmail!,\r\n          name: userName!,\r\n          photo: userPhoto!\r\n        }\r\n      };\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n}","module.exports = require(\"googleapis\");","import { ObjectType, Field } from 'type-graphql';\r\nimport { UserName, UserPhoto, UserType } from '../user';\r\n\r\n@ObjectType()\r\nexport class AuthResponse {\r\n  @Field()\r\n  token!: string;\r\n}\r\n\r\n@ObjectType()\r\nexport class AuthRedirect {\r\n  @Field()\r\n  url!: string;\r\n}\r\n\r\nexport interface AuthData {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  profile: any;\r\n}\r\n\r\nexport interface DecodedToken {\r\n  id: string;\r\n  email: string;\r\n  name: UserName;\r\n  photos?: UserPhoto[];\r\n  access: UserType;\r\n  exp: number;\r\n}","module.exports = require(\"@koa/cors\");","module.exports = require(\"koa-bodyparser\");"],"sourceRoot":""}